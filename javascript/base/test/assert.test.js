// Copyright 2015 Las Venturas Playground. All rights reserved.
// Use of this source code is governed by the MIT license, a copy of which can
// be found in the LICENSE file.

let Assert = require('base/test/assert.js');

describe('Assert', it => {
  // TODO: assert(expression, message)
  // TODO: assert.fail(actual, expected, [message], [operator])
  // TODO: assert.ok(object, [message])
  // TODO: assert.notOk(object, [message])
  // TODO: assert.equal(actual, expected, [message])
  // TODO: assert.notEqual(actual, expected, [message])
  // TODO: assert.strictEqual(actual, expected, [message])
  // TODO: assert.notStrictEqual(actual, expected, [message])
  // TODO: assert.deepEqual(actual, expected, [message])
  // TODO: assert.notDeepEqual(actual, expected, [message])
  // TODO: assert.isTrue(value, [message])
  // TODO: assert.isAbove(valueToCheck, valueToBeAbove, [message])
  // TODO: assert.isBelow(valueToCheck, valueToBeBelow, [message])
  // TODO: assert.isFalse(value, [message])
  // TODO: assert.isNull(value, [message])
  // TODO: assert.isNotNull(value, [message])
  // TODO: assert.isUndefined(value, [message])
  // TODO: assert.isDefined(value, [message])
  // TODO: assert.isFunction(value, [message])
  // TODO: assert.isNotFunction(value, [message])
  // TODO: assert.isObject(value, [message])
  // TODO: assert.isNotObject(value, [message])
  // TODO: assert.isArray(value, [message])
  // TODO: assert.isNotArray(value, [message])
  // TODO: assert.isString(value, [message])
  // TODO: assert.isNotString(value, [message])
  // TODO: assert.isNumber(value, [message])
  // TODO: assert.isNotNumber(value, [message])
  // TODO: assert.isBoolean(value, [message])
  // TODO: assert.isNotBoolean(value, [message])
  // TODO: assert.typeOf(value, name, [message])
  // TODO: assert.notTypeOf(value, name, [message])
  // TODO: assert.instanceOf(object, constructor, [message])
  // TODO: assert.notInstanceOf(object, constructor, [message])
  // TODO: assert.include(haystack, needle, [message])
  // TODO: assert.notInclude(haystack, needle, [message])
  // TODO: assert.match(value, regexp, [message])
  // TODO: assert.notMatch(value, regexp, [message])
  // TODO: assert.property(object, property, [message])
  // TODO: assert.notProperty(object, property, [message])
  // TODO: assert.deepProperty(object, property, [message])
  // TODO: assert.notDeepProperty(object, property, [message])
  // TODO: assert.propertyVal(object, property, value, [message])
  // TODO: assert.propertyNotVal(object, property, value, [message])
  // TODO: assert.deepPropertyVal(object, property, value, [message])
  // TODO: assert.deepPropertyNotVal(object, property, value, [message])
  // TODO: assert.lengthOf(object, length, [message])
  // TODO: assert.throws(function, [constructor/string/regexp], [string/regexp], [message])
  // TODO: assert.doesNotThrow(function, [constructor/regexp], [message])
  // TODO: assert.operator(val1, operator, val2, [message])
  // TODO: assert.closeTo(actual, expected, delta, [message])
  // TODO: assert.sameMembers(set1, set2, [message])
  // TODO: assert.sameDeepMembers(set1, set2, [message])
  // TODO: assert.includeMembers(superset, subset, [message])
  // TODO: assert.changes(function, object, property)
  // TODO: assert.doesNotChange(function, object, property)
  // TODO: assert.increases(function, object, property)
  // TODO: assert.doesNotIncrease(function, object, property)
  // TODO: assert.decreases(function, object, property)
  // TODO: assert.doesNotDecrease(function, object, property)
});
